# Define a custom log format to include upstream information
log_format upstream_log '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      'upstream_addr=$upstream_addr upstream_status=$upstream_status';

server {
    listen 80;
    server_name localhost;

    # Enable the custom access log
    access_log /var/log/nginx/access.log upstream_log;

    # Serve static files for the React app
    location / {
        root /usr/share/nginx/html;
        try_files $uri /index.html;
    }

    # Location block for the authentication service - СПЕЦИФИЧНЫЙ БЛОК ИДЁТ ПЕРВЫМ
    location ^~ /api/v1/auth/ {
        # The full path will be proxied.
        # e.g., /api/v1/auth/register -> http://auth-service:8081/api/v1/auth/register
        proxy_pass http://auth-service:8081;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Reverse proxy for all OTHER API calls - ОБЩИЙ БЛОК ИДЁТ ВТОРЫМ
    location /api/ {
        # Proxy requests for all other microservices to the API Gateway
        proxy_pass http://api-gateway:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Redirect server error pages to the static page /50x.html
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}

