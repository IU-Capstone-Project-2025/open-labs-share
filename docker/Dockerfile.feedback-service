FROM golang:1.24-alpine AS builder

WORKDIR /app

RUN apk add --no-cache git protobuf protobuf-dev wget

COPY services/feedback-service/go.mod services/feedback-service/go.sum ./

# Use cache mount for go modules
RUN --mount=type=cache,target=/go/pkg/mod go mod download

RUN go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
RUN go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

COPY services/feedback-service/ .

RUN mkdir -p internal/grpc/proto
RUN protoc --go_out=. --go_opt=paths=source_relative \
    --go-grpc_out=. --go-grpc_opt=paths=source_relative \
    api/feedback_service.proto
RUN protoc --go_out=. --go_opt=paths=source_relative \
    --go-grpc_out=. --go-grpc_opt=paths=source_relative \
    api/comment_service.proto

# Use cache mount for building
RUN --mount=type=cache,target=/go/pkg/mod CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o feedback-service ./cmd/

# Final stage
FROM debian:11-slim

RUN apt-get update && apt-get install -y --no-install-recommends ca-certificates wget && rm -rf /var/lib/apt/lists/*

# Install grpc-health-probe
RUN GRPC_HEALTH_PROBE_VERSION=v0.4.24 && \
    wget -q https://github.com/grpc-ecosystem/grpc-health-probe/releases/download/${GRPC_HEALTH_PROBE_VERSION}/grpc_health_probe-linux-amd64 -O /usr/local/bin/grpc_health_probe && \
    chmod +x /usr/local/bin/grpc_health_probe

WORKDIR /app

COPY --from=builder /app/feedback-service /app/
COPY --from=builder /app/migrations /app/migrations

EXPOSE 9090

ENTRYPOINT ["/app/feedback-service"] 