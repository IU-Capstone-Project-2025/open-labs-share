name: 'article-service'
services:
  # 1. MinIO Storage Service
  minio-articles:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    env_file: .env
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY:-minioadmin}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 2s
      timeout: 2s
      retries: 5
    volumes:
        - minio_data:/data
    networks:
        - articles-network
    ports:
        - "9000:9000"  # MinIO API
        - "9001:9001"  # MinIO Console
    restart: unless-stopped

  # 2. PostgreSQL Database Service
  postgres-articles:
    image: postgres:15-alpine
    env_file: .env
    environment:
      POSTGRES_USER: articles_user
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD:-postgres}
      POSTGRES_DB: articles_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U articles_user -d articles_db"]
      interval: 2s
      timeout: 2s
      retries: 5
    volumes:
      - postgres_data_articles:/var/lib/postgresql/data
    networks:
      - articles-network
    ports:
      - "${POSTGRES_PORT}:5432"

  # 3. Article Service
  article-service:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    environment:
      - SERVICE_HOST=0.0.0.0
      - SERVICE_PORT=50051
      - MINIO_ENDPOINT=minio-articles:9000
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-minioadmin}
      - POSTGRES_HOST=postgres-articles
      - POSTGRES_PORT=5432
      - POSTGRES_USER=articles_user
      - POSTGRES_PASSWORD=${POSTGRESQL_PASSWORD:-postgres}
      - POSTGRES_NAME=articles_db
    depends_on:
      postgres-articles:
        condition: service_healthy
      minio-articles:
        condition: service_healthy
    volumes:
      - ./files:/app/files
    networks:
      - articles-network
    ports:
      - "${SERVICE_PORT:-50051}:${SERVICE_PORT:-50051}"
    restart: unless-stopped

volumes:
  postgres_data_articles:
  minio_data:

networks:
  articles-network:
    driver: bridge